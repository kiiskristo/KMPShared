name: Build and Release KMP Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew assemble
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}

      - name: Build iOS Framework
        run: ./gradlew :shared:assembleXCFramework
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}

      - name: Prepare Swift Package
        run: |
          mkdir -p SwiftPackage/Sources/MeetAgainShared
          cp -R shared/build/XCFrameworks/release/shared.xcframework SwiftPackage/Sources/MeetAgainShared/
          echo '
          // swift-tools-version:5.3
          import PackageDescription

          let package = Package(
              name: "MeetAgainShared",
              platforms: [
                  .iOS(.v10)
              ],
              products: [
                  .library(
                      name: "MeetAgainShared",
                      targets: ["MeetAgainShared"]),
              ],
              targets: [
                  .binaryTarget(
                      name: "MeetAgainShared",
                      path: "./Sources/MeetAgainShared/shared.xcframework")
              ]
          )
          ' > SwiftPackage/Package.swift

      - name: Commit and Push Swift Package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add SwiftPackage/
          git commit -m "Release new version of Swift Package"
          git push origin main